# vim:set ft=sh:
# Maintainer: BlackIkeEagle <ike DOT devolder AT gmail DOT com>
# Maintainer: Christian Hesse <mail@eworm.de>
# Contributor: Alexandre Boily <alexandreboily@gmail.com>
# Contributor: Illarion Kovalchuk <illarion.kovalchuk@gmail.com>
# Contributor: totoloco <totoloco at gmail _dot_com>
# Contributor: Ionut Biru <ibiru@archlinux.org>

pkgname='mysql-workbench'
pkgver=6.2.4
pkgrel=1
pkgdesc="A cross-platform, visual database design tool developed by MySQL"
arch=('i686' 'x86_64')
url="https://www.mysql.com/products/workbench/"
license=('GPL2')
depends=(
'ctemplate'
'desktop-file-utils'
'gdal'
'gtkmm'
'hicolor-icon-theme'
'libgnome-keyring'
'libiodbc'
'libzip'
'lua51'
'mysql-connector-c++'
'python2'
'python2-paramiko'
'python2-pexpect'
'python2-pysqlite'
'tinyxml'
#'unixodbc'
'vsqlite++'
)
optdepends=('gnome-keyring: store SSH/MySQL passwords in GNOME password manager')
makedepends=(
'boost'
'cmake'
'curl'
'mesa'
'swig'
'java-runtime'
)
install='mysql-workbench.install'

source=(
	"http://cdn.mysql.com/Downloads/MySQLGUITools/${pkgname}-community-${pkgver}-src.tar.gz"
	'arch_linux_profile.xml'
	'http://www.antlr3.org/download/antlr-3.4-complete.jar'
	'mysql-workbench-ctemplate.patch'
	'mysql-workbench-no-check-for-updates.patch'
	'mysql-workbench-paramiko.patch'
	'mysql-workbench-keyring.patch'
)

prepare() {
	cd "$pkgname-community-$pkgver-src"

	# Disable 'Help' -> 'Check for Updates'
	msg2 "Disable 'Help' -> 'Check for Updates'"
	patch -Np1 -i "${srcdir}"/mysql-workbench-no-check-for-updates.patch

	# fix deprecated calls to tpl->ReloadIfChanged
	# http://bugs.mysql.com/72585
	msg2 'fix deprecated calls to tpl->ReloadIfChanged'
	patch -Np1 -i "${srcdir}"/mysql-workbench-ctemplate.patch

	# fix SSH tunnel
	msg2 'fix SSH tunnel'
	patch -Np1 -i "${srcdir}"/mysql-workbench-paramiko.patch

	# fix GNOME keyring >= 3.14
	# http://bugs.mysql.com/bug.php?id=74771
	msg2 'fix GNOME keyring >= 3.14'
	patch -Np1 -i "${srcdir}"/mysql-workbench-keyring.patch

	msg2 'fix gdal'
	sed -i '/#include/s|gdal/||' backend/wbpublic/grtui/geom_draw_box.h backend/wbpublic/grt/spatial_handler.h

	# put antlr into place
	msg2 'put antlr into place'
	install -D ${srcdir}/antlr-3.4-complete.jar ${srcdir}/linux-res/bin/antlr-3.4-complete.jar
}

build() {
	cd "$pkgname-community-$pkgver-src"

	cmake . \
		-DPYTHON_INCLUDE_DIR=/usr/include/python2.7 \
		-DPYTHON_LIBRARY=/usr/lib/libpython2.7.so \
		-DLUA_INCLUDE_DIR=/usr/include/lua5.1 \
		-DLUA_LIBRARY=/usr/lib/liblua5.1.so \
		-DCMAKE_INSTALL_PREFIX=/usr
	make
}

package() {
	cd "$pkgname-community-$pkgver-src"

	make DESTDIR="${pkgdir}" install
	install -D -m 0644 ${srcdir}/arch_linux_profile.xml ${pkgdir}/usr/share/mysql-workbench/mysql.profiles/Arch_Linux_\(MariaDB_5.5_Package\).xml

	# dirty trick to clean build env
	cd .. && rm -rf "$pkgname-community-$pkgver-src"
}

sha256sums=('b3e0775b7725fde3be8a63b6b1fd293a41bb6cbbc9dc459924b774fb4ad1afaa'
            '1aa3cc7bf83470e81eca766114a597fa57542316818732011c8ea67e52197c7e'
            '9d3e866b610460664522520f73b81777b5626fb0a282a5952b9800b751550bf7'
            'bbf6f3e56847cc012634e262295f34eaaa43ef32d04e1ec291315dabd6613042'
            '996482e15d88af097f5e7a578885338cad5b8724f8abb4341749d5538801f5c0'
            '9c8d9a2c32ef63f2fd1f1062d42ab0b77f8c28fa77d05ded7b1c0a98be626d71'
            '683a60e2bb38d8687f7e5228b49f62b374bf2c93488bdb89307205dbf5b3c476')
