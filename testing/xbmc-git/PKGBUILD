# vim:set ft=sh:
# Maintainer: BlackIkeEagle < ike DOT devolder AT gmail DOT com >
# Contributor: DonVla <donvla@users.sourceforge.net>
# Contributor: Ulf Winkelvos <ulf [at] winkelvos [dot] de>
# Contributor: Ralf Barth <archlinux dot org at haggy dot org>
# Contributor: B & monty - Thanks for your hints :)
# Contributor: marzoul
# Contributor: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Contributor: Brad Fanella <bradfanella@archlinux.us>
# Contributor: [vEX] <niechift.dot.vex.at.gmail.dot.com>
# Contributor: Zeqadious <zeqadious.at.gmail.dot.com>
# Contributor: Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Maxime Gauduin <alucryd@gmail.com>
#
# Original credits go to Edgar Hucek <gimli at dark-green dot com>
# for his xbmc-vdpau-vdr PKGBUILD at https://archvdr.svn.sourceforge.net/svnroot/archvdr/trunk/archvdr/xbmc-vdpau-vdr/PKGBUILD

pkgname=xbmc-git
_gitname='xbmc'
pkgver=20140618.4c59f0f
pkgrel=1
pkgdesc="XBMC Media Center git master branch"
provides=('xbmc')
conflicts=('xbmc' 'xbmc-pulse' 'xbmc-svn')
replaces=('xbmc-svn')
arch=('i686' 'x86_64')
url="http://xbmc.org"
license=('GPL2')
depends=(
'avahi' 'hicolor-icon-theme' 'libcdio' 'libmicrohttpd'
'libmpeg2' 'libmysqlclient' 'libssh' 'libxrandr' 'libxslt'
'lzo2' 'mesa' 'mesa-demos' 'python2' 'smbclient' 'sdl_image' 'sdl_mixer'
'taglib' 'tinyxml' 'unzip' 'xorg-xdpyinfo' 'yajl'
# internal ffmpeg
'alsa-lib' 'bzip2' 'fontconfig' 'gnutls' 'gsm' 'lame' 'libass' 'libvdpau'
'libbluray' 'libmodplug' 'libpulse' 'libtheora' 'libva' 'libvorbis' 'libvpx'
'opencore-amr' 'openjpeg' 'opus' 'rtmpdump' 'schroedinger' 'sdl' 'speex'
'v4l-utils' 'x264' 'xvidcore' 'zlib' 'x265'
)
makedepends=(
'afpfs-ng' 'libnfs' 'libplist' 'shairplay' 'libcec' 'boost' 'cmake' 'doxygen'
'gperf' 'jasper' 'java-runtime-headless' 'nasm' 'swig' 'taglib' 'udisks'
'upower' 'zip' 'git'
)
optdepends=(
'afpfs-ng: Apple File Protocol suport'
'libnfs: NFS Share support'
'libplist: AirPlay support'
'shairplay: AirPlay support'
'libcec: Pulse-Eight USB-CEC adapter support'
'pulseaudio: for pulseaudio support'
'lirc: remote controller support'
'unrar: access compressed files without unpacking them'
'xorg-xinit: autostart xbmc'
'udisks: automount external drives'
'upower: display battery level'
'gdb: for meaningful backtraces in case of trouble - STRONGLY RECOMMENDED'
'libcrystalhd: Broadcom CrystalHD kernel module'
'libva-vdpau-driver: accelerated video playback for nvidia cards'
'xvba-video: accelerated video playback for amd cards'
)
install="$pkgname.install"
source=(
	"$_gitname::git://github.com/xbmc/xbmc.git"
	'xbmc.service'
)
sha256sums=(
	'SKIP'
	'17ea860b675568f516df0289e5663029a2ce1829b0dfa3c71636ef1ae7cd2207'
)

_prefix='/usr'

pkgver() {
	cd "$srcdir/$_gitname"
	# suggested by marzoul
	git log -1 --date=short --format="%cd.%h" | tr -d '-'
}

prepare() {
	cd ${_gitname}

	find -type f -name *.py -exec sed 's|^#!.*python$|#!/usr/bin/python2|' -i "{}" +
	sed 's|^#!.*python$|#!/usr/bin/python2|' -i tools/depends/native/rpl-native/rpl
	sed 's/python/python2/' -i tools/Linux/xbmc.sh.in
}

build() {
	cd ${_gitname}

	# Bootstrapping
	./bootstrap

	# latest configure options
	# --enable-neon           enable neon passing to ffmpeg (default is no)
	# --enable-optimizations  enable optimization (default is yes)
	# --enable-gl             enable OpenGL rendering (default is yes)
	# --enable-gles           enable OpenGLES rendering (default is no)
	# --enable-sdl            enable SDL (default is auto)
	# --enable-vdpau          enable VDPAU decoding (default is auto)
	# --enable-vaapi          enable VAAPI decoding (default is auto)
	# --enable-crystalhd      enable CrystalHD decoding (default is auto)
	# --enable-vdadecoder     enable VDADecoder decoding (default is auto)
	# --enable-vtbdecoder     enable VTBDecoder decoding (default is auto)
	# --enable-openmax        enable OpenMax decoding (default is auto, requires OpenGLES)
	# --enable-tegra          enable Tegra2 arm (default is no)
	# --enable-profiling      enable gprof profiling (default is no)
	# --enable-joystick       enable SDL joystick support (default is yes)
	# --enable-xrandr         enable XRandR support (default is yes)
	# --enable-goom           enable GOOM visualisation (default is no)
	# --enable-rsxs           enable really slick X screensavers (default is yes)
	# --enable-projectm       enable ProjectM visualisation (default is yes)
	# --enable-x11            enable x11 (default is yes) 'Linux Only'
	# --enable-ccache         enable building with ccache feature (default is auto)
	# --enable-pulse          enable PulseAudio support (default is auto)
	# --enable-rtmp           enable RTMP support via librtmp (default is auto)
	# --disable-samba         disable SAMBA support (default is enabled)
	# --enable-nfs            enable NFS support via libnfs (default is auto)
	# --enable-afpclient      enable AFP support via libafpclient (default is auto)
	# --enable-airplay        enable AirPlay support(default is auto)
	# --enable-airtunes       enable AirTunes support(default is auto)
	# --enable-ffmpeg-libvorbis enable FFmpeg vorbis encoding (default is no)
	# --enable-dvdcss         enable DVDCSS support (default is yes)
	# --enable-mid            enable MID support (default is no)
	# --disable-hal           disable HAL support (default is enabled if hal and hal-storage is found)
	# --disable-avahi         disable Avahi support (default is enabled if libavahi-common and libavahi-client is found)
	# --disable-non-free      disable componentents with non-compliant licenses
	# --enable-asap-codec     enable ASAP ADPCM support
	# --disable-webserver     disable webserver
	# --disable-optical-drive disable optical drive
	# --enable-libbluray      enable libbluray support
	# --enable-texturepacker  enable texturepacker support (default is yes)
	# --enable-udev           enable udev support (default is auto)
	# --enable-libusb         enable libusb support (default is auto)
	# --enable-libcec         enable libcec support (default is auto)
	# --enable-external-libraries enable use of all supported external libraries (default is no) 'Linux only'
	# --enable-external-ffmpeg enable use of external ffmpeg libraries (default is no) 'Linux only'

	# Configuring XBMC
	export PYTHON_VERSION=2  # external python v2
	./configure --prefix=$_prefix --exec-prefix=$_prefix \
		--enable-debug \
		--enable-optimizations \
		--enable-gl \
		--enable-sdl \
		--enable-vaapi \
		--enable-vdpau \
		--enable-xvba \
		--enable-joystick \
		--enable-xrandr \
		--enable-rsxs \
		--enable-projectm \
		--enable-x11 \
		--enable-pulse \
		--enable-rtmp \
		--enable-samba \
		--enable-nfs \
		--enable-afpclient \
		--enable-airplay \
		--enable-airtunes \
		--enable-ffmpeg-libvorbis \
		--enable-dvdcss \
		--disable-hal \
		--enable-avahi \
		--enable-webserver \
		--enable-optical-drive \
		--enable-libbluray \
		--enable-texturepacker \
		--enable-udev \
		--enable-libusb \
		--enable-libcec \
		--enable-external-libraries \
		--with-lirc-device=/run/lirc/lircd


	# Now (finally) build
	make
}

package() {
	cd ${_gitname}
	# Running make install
	make DESTDIR="$pkgdir" install

	# Tools
	install -Dm755 $srcdir/$_gitname/tools/TexturePacker/TexturePacker \
		${pkgdir}${_prefix}/lib/xbmc/

	# Licenses
	install -dm755 ${pkgdir}${_prefix}/share/licenses/${pkgname}
	for licensef in LICENSE.GPL copying.txt; do
		mv ${pkgdir}${_prefix}/share/doc/xbmc/${licensef} \
			${pkgdir}${_prefix}/share/licenses/${pkgname}
	done

	# install systemd service
	install -Dm0644 $srcdir/xbmc.service $pkgdir/usr/lib/systemd/system/xbmc.service

	# XBMC user home
	install -dm 700 "${pkgdir}"/var/lib/xbmc
	chown 420:420 "${pkgdir}"/var/lib/xbmc
}
