# Maintainer: Vi0L0 <vi0l093@gmail.com>
# Great Contributor: Eduardo "kensai" Romero (previous maintainer)
# Contributor: aidanlinz
# Contributor: Rip-Rip
# Contributor: OvsInc
# Contributor: Sebastian Siebert

pkgname=catalyst-legacy-slk
pkgver=13.1
pkgrel=6
pkgdesc="AMD/ATI Catalyst legacy drivers for linux. fglrx kernel module only"
arch=('i686' 'x86_64')
url="http://www.ati.amd.com"
license=('custom')
depends=('linux-slk>=3.2.44' 'linux-slk<3.6' 'catalyst-legacy-utils')
makedepends=('gcc-libs' 'gcc>4.0.0' 'make' 'linux-slk-headers')
conflicts=('catalyst-test' 'nvidia' 'xf86-video-ati' 'xf86-video-radeonhd' 'ati-dri' 'catalyst-slk')
provides=('catalyst' 'catalyst-slk')
install=catalyst.install

source=(
	"http://www2.ati.com/drivers/legacy/amd-driver-installer-catalyst-$pkgver-legacy-linux-x86.x86_64.zip"
	'ati_make.sh'
	'makefile_compat.patch'
	'3.5-do_mmap.patch'
	'ati-2.6.36-compat_alloc_user_space.patch'
)

md5sums=('c07fd1332abe4c742a9a0d0e0d0a90de'
	 '5fba762e8df4f71b29834417c77eda50'
	 '3e1b82bd69774ea808da69c983d6a43b'
	 'a450e2e3db61994b09e9d99d95bee837'
	 'ff6ff4438d8fd88802981fd654a45a80')

_extramodules=3.2-SLK-external

build() {
	_kernver="$(cat /usr/lib/modules/${_extramodules}/version)"

    msg "Setting compilation variables ..."
  ## include ati_make.sh and use _ati_check function from it
    . ati_make.sh
    _ati_check


    msg "Unpacking archive ..."
    /bin/sh ./amd-driver-installer-catalyst-$pkgver-legacy-linux-x86.x86_64.run --extract archive_files


    if [ "${CARCH}" = "x86_64" ]; then
	BUILDARCH=x86_64
	_archdir=x86_64
    fi
    if [ "${CARCH}" = "i686" ]; then
	BUILDARCH=i386
	_archdir=x86
    fi

    cd "${srcdir}/archive_files/"


    msg "Applying patch(es) ..."
   ## makefile patch to choose arch_compat_alloc_user_space or older compat_alloc_user_space
   ## works only in combination with ati_make.sh script
    patch -Np1 -i $srcdir/makefile_compat.patch
	patch -Np1 -i $srcdir/3.5-do_mmap.patch
	(cd common/lib/modules/fglrx/build_mod; patch -Np0 -i $srcdir/ati-2.6.36-compat_alloc_user_space.patch)

#    patch -Np1 -i ../3.4.patch || return 1

#    if [[ ${_kernver:0:6} < "2.6.39" ]] && [[ `cat /lib/modules/${_kernver}/build/.config | grep -c CONFIG_BKL=y` = 0 ]]; then
#	patch -Np1 -i ../no_bkl.patch || return 1
#    fi

#    if [[ ${_kernver:0:6} == "2.6.39" ]] || [[ ${_kernver:0:6} > "2.6.39" ]]; then
#	patch -Np1 -i ../no_bkl.patch || return 1
#        patch -Np1 -i ../2.6.39_bkl.patch || return 1
#    fi

    cd "${srcdir}/archive_files/common/lib/modules/fglrx/build_mod"
    cp "${srcdir}/archive_files/arch/${_archdir}/lib/modules/fglrx/build_mod/libfglrx_ip.a" . || return 1
    cp 2.6.x/Makefile . || return 1


    msg "Compiling fglrx module ..."
   ## Compile module using _ati_check variables
    make -C /lib/modules/${_kernver}/build SUBDIRS="`pwd`" ARCH=${BUILDARCH} \
      MODFLAGS="-DMODULE -DATI -DFGL -DPAGE_ATTR_FIX=$PAGE_ATTR_FIX -DCOMPAT_ALLOC_USER_SPACE=$COMPAT_ALLOC_USER_SPACE $def_smp $def_modversions" \
      PAGE_ATTR_FIX=$PAGE_ATTR_FIX COMPAT_ALLOC_USER_SPACE=$COMPAT_ALLOC_USER_SPACE modules || return 1
}

package() {
	_kernver="$(cat /usr/lib/modules/${_extramodules}/version)"

  ## here we are checking kernel's extramodules dir
    for r in /lib/modules/*; do
      s=${r:13}
      if [[ ${s:0:3} = "ext" ]]; then
	if [[ `cat ${r}/version | grep -c ${_kernver}` != 0 ]]; then
	  _destidir=${s}
	  sed -i -e "s/EXTRAMODULES=.*/EXTRAMODULES=${s}/" $startdir/catalyst.install
	fi
	elif [[ ${s} = ${_kernver} ]] && [[ ! -e ${r}/extramodules ]]; then
	  _destidir=${_kernver}/video
	  sed -i -e "s/EXTRAMODULES=.*/EXTRAMODULES=null/" $startdir/catalyst.install
      fi
    done


    cd "${srcdir}/archive_files/common/lib/modules/fglrx/build_mod"
    install -m755 -d "${pkgdir}/lib/modules/${_destidir}/" || return 1
    install -m644 fglrx.ko "${pkgdir}/lib/modules/${_destidir}/" || return 1
    find "${pkgdir}" -name '*.ko' -exec gzip -9 {} \;
    sed -i -e "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/" $startdir/catalyst.install

  ## License
    install -m755 -d "${pkgdir}/usr/share/licenses/${pkgname}"
    install -m644 "${srcdir}/archive_files/LICENSE.TXT" "${pkgdir}/usr/share/licenses/${pkgname}/" || return 1

    sed -i -e "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/" $startdir/*.install
}

# vim:set ft=sh:
