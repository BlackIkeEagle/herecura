# Maintainer: BlackEagle < ike DOT devolder AT gmail DOT com >
# Contributor: Tobias Powalowski <tpowa@archlinux.org>
# Contributor: Thomas Baechler <thomas@archlinux.org>
pkgbase="kernel26-slk"
pkgname=('kernel26-slk' 'kernel26-slk-headers')
# pkgname=kernel26-custom       # Build kernel with a different name
_kernelname=-slk
_basekernel=2.6.36
_patchver=0
pkgver=${_basekernel}
pkgrel=2
_patchname="patch-${pkgver}"
arch=(i686 x86_64)
license=('GPL2')
url="http://www.kernel.org"
source=("ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-$_basekernel.tar.bz2"
		# the main kernel config files
		"config-${_basekernel}.i686"
		"config-${_basekernel}.x86_64"
		# standard config files for mkinitcpio ramdisk
		"kernel26-slk.preset"
)
sha256sums=('15a076d1a435a6bf8e92834eba4b390b4ec094ce06d47f89d071ca9e5788ce04'
            '702c6092b8bde5cd6bb6d5770451229721fc0719719c76a682995b53c0d7d859'
            '3e0d32644ad8c5fff0273cab4eedb40ce7d515845b4eecc4a552504e508bd3e7'
	    '2b5abb325d33a02bb1d21a8b4d314a9e155ce41a066ad94c8a95b01341886862')
if [ ${_patchver} -ne 0 ]; then
	pkgver=${_basekernel}.${_patchver}
	_patchname="patch-${pkgver}"
	source=( "${source[@]}"
		"http://www.kernel.org/pub/linux/kernel/v2.6/${_patchname}.bz2"
	)
	sha256sums=( "${sha256sums[@]}"
		""
	)
fi
# extra patches
_extrapatches=(
	"Skip-looking-for-ioapic-overrides-when-ioapics-are-not-present.patch"
)
_extrapatchessums=(
	"7c59e191f7581246bb37960f2b8817b88eee42b1ef464417bf19e6258246b863"
)
source=( "${source[@]}"
	"${_extrapatches[@]}"
)
sha256sums=( "${sha256sums[@]}"
	"${_extrapatchessums[@]}"
)

build() {
	cd ${srcdir}/linux-$_basekernel
	# Add revision patches
	if [ ${_patchver} -ne 0 ]; then
		patch -Np1 -i ${srcdir}/${_patchname}
	fi

	# extra patches
	for patch in ${_extrapatches[@]}; do
		patch -Np1 -i ${srcdir}/${patch}
	done

	if [ "$CARCH" = "x86_64" ]; then
		cat ../config-${_basekernel}.x86_64 >./.config
	else
		cat ../config-${_basekernel}.i686 >./.config
	fi
	if [ "${_kernelname}" != "" ]; then
		sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"\U${_kernelname}\"|g" ./.config
	fi
	sed -i -e 's/^EXTRAVERSION =.*/EXTRAVERSION =/' ./Makefile

	# hack to prevent output kernel from being marked as dirty or git
	echo "" > ${srcdir}/linux-${_basekernel}/.scmversion

	# get kernel version
	make prepare
	# load configuration
	# Configure the kernel. Replace the line below with one of your choice.
	#make menuconfig # CLI menu for configuration
	#make xconfig # X-based configuration
	#make oldconfig # using old config from previous kernel version
	# ... or manually edit .config
	####################
	# stop here
	# this is useful to configure the kernel
	#msg "Stopping build"
	#return 1
	####################
	yes "" | make config
	# build!
	make bzImage modules
}

package_kernel26-slk() {
	pkgdesc="The Linux Kernel and modules, inspired by Slackware kernel"
	groups=('base')
	provides=('kernel26')
	backup=(etc/mkinitcpio.d/${pkgname}.preset)
	depends=('coreutils' 'module-init-tools' 'mkinitcpio>=0.5.20')
	# pwc, ieee80211 and hostap-driver26 modules are included in kernel26 now
	# nforce package support was abandoned by nvidia, kernel modules should cover everything now.
	# kernel24 support is dropped since glibc24
	replaces=('kernel24' 'kernel24-scsi' 'kernel26-scsi'
	'alsa-driver' 'ieee80211' 'hostap-driver26'
	'pwc' 'nforce' 'squashfs' 'unionfs' 'ivtv'
	'zd1211' 'kvm-modules' 'iwlwifi' 'rt2x00-cvs'
	'gspcav1' 'atl2' 'wlan-ng26' 'rt2500' 'nouveau-drm')
	install=${pkgname}.install
	optdepends=('crda: to set the correct wireless channels of your country'
	'linux-firmware: when having some hardware needing special firmware')

	KARCH=x86
	cd ${srcdir}/linux-$_basekernel
	# get kernel version
	_kernver="$(make kernelrelease)"
	mkdir -p ${pkgdir}/{lib/modules,boot}
	make INSTALL_MOD_PATH=${pkgdir} modules_install
	cp System.map ${pkgdir}/boot/System.map26${_kernelname}
	cp arch/$KARCH/boot/bzImage ${pkgdir}/boot/vmlinuz26${_kernelname}

	# install fallback mkinitcpio.conf file and preset file for kernel
	install -m644 -D ${srcdir}/${pkgname}.preset ${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset
	# set correct depmod command for install
	sed \
		-e  "s/KERNEL_NAME=.*/KERNEL_NAME=${_kernelname}/g" \
		-e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
		-i $startdir/${pkgname}.install
	sed \
		-e "s|source .*|source /etc/mkinitcpio.d/kernel26${_kernelname}.kver|g" \
		-e "s|default_image=.*|default_image=\"/boot/${pkgname}.img\"|g" \
		-e "s|fallback_image=.*|fallback_image=\"/boot/${pkgname}-fallback.img\"|g" \
		-i ${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset

	echo -e "# DO NOT EDIT THIS FILE\nALL_kver='${_kernver}'" > ${pkgdir}/etc/mkinitcpio.d/${pkgname}.kver
	# remove build and source links
	rm -f ${pkgdir}/lib/modules/${_kernver}/{source,build}
	# remove the firmware
	rm -rf ${pkgdir}/lib/firmware
}

package_kernel26-slk-headers() {
	pkgdesc="Header files and scripts for building modules for kernel26-slk"
	provides=('kernel26-headers')
	mkdir -p ${pkgdir}/lib/modules/${_kernver}
	cd ${pkgdir}/lib/modules/${_kernver}
	ln -sf ../../../usr/src/linux-${_kernver} build
	cd ${srcdir}/linux-$_basekernel
	install -D -m644 Makefile \
		${pkgdir}/usr/src/linux-${_kernver}/Makefile
	install -D -m644 kernel/Makefile \
		${pkgdir}/usr/src/linux-${_kernver}/kernel/Makefile
	install -D -m644 .config \
		${pkgdir}/usr/src/linux-${_kernver}/.config

	# copy files necessary for later builds, like nvidia and vmware
	cp Module.symvers ${pkgdir}/usr/src/linux-${_kernver}
	cp -a scripts ${pkgdir}/usr/src/linux-${_kernver}
	# fix permissions on scripts dir
	chmod og-w -R ${pkgdir}/usr/src/linux-${_kernver}/scripts
	mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/.tmp_versions

	mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel

	cp arch/$KARCH/Makefile ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
	if [ "$CARCH" = "i686" ]; then
		cp arch/$KARCH/Makefile_32.cpu ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
	fi
	cp arch/$KARCH/kernel/asm-offsets.s ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel/

	# add docbook makefile
	install -D -m644 Documentation/DocBook/Makefile \
		${pkgdir}/usr/src/linux-${_kernver}/Documentation/DocBook/Makefile

	# add config
	for config in `find ./include/config -size +1c -type f`; do
		mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/$(dirname ${config})
		cp -a ${config} ${pkgdir}/usr/src/linux-${_kernver}/$(dirname ${config})
	done

	# add headers
	for header in `find -size +1c -name '*.h'`; do
		mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/$(dirname ${header})
		cp -a ${header} ${pkgdir}/usr/src/linux-${_kernver}/$(dirname ${header})
	done

	# copy in Kconfig files
	for i in `find . -name "Kconfig*"`; do
		mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/`echo $i | sed 's|/Kconfig.*||'`
		cp $i ${pkgdir}/usr/src/linux-${_kernver}/$i
	done

	chown -R root.root ${pkgdir}/usr/src/linux-${_kernver}
	find ${pkgdir}/usr/src/linux-${_kernver} -type d -exec chmod 755 {} \;
	# remove unneeded architectures
	rm -rf ${pkgdir}/usr/src/linux-${_kernver}/arch/{alpha,arm,arm26,avr32,blackfin,cris,frv,h8300,ia64,m32r,m68k,m68knommu,mips,microblaze,mn10300,parisc,powerpc,ppc,s390,sh,sh64,sparc,sparc64,um,v850,xtensa}
}
