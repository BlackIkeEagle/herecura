--- a/commandline.cpp
+++ b/commandline.cpp
@@ -557,8 +557,7 @@ bool CommandLine::Parse(int argc, char *argv[])
         list<string>::iterator fn = filenames->begin();
         while (fn != filenames->end())
         {
-          // Convert filename from command line into a full path + filename
-          string filename = DiskFile::GetCanonicalPathname(*fn);
+          string filename = *fn;
 
           // If this is the first file on the command line, then it
           // is the main PAR2 file.
--- a/diskfile.cpp
+++ b/diskfile.cpp
@@ -615,6 +615,9 @@ string DiskFile::GetCanonicalPathname(string filename)
   string result = work;
   delete [] work;
 
+  printf("Original: %s\n", filename.c_str());
+  printf("Canonical: %s\n", result.c_str());
+
   return result;
 }
 
@@ -855,14 +858,6 @@ string DiskFile::TranslateFilename(string filename)
     {
       ok = false;
     }
-    else
-    {
-      switch (ch)
-      {
-      case '/':
-        ok = false;
-      }
-    }
 #endif
 
 
--- a/par2creator.cpp
+++ b/par2creator.cpp
@@ -490,9 +490,7 @@ bool Par2Creator::OpenSourceFiles(const list<CommandLine::ExtraFile> &extrafiles
   {
     Par2CreatorSourceFile *sourcefile = new Par2CreatorSourceFile;
 
-    string path;
-    string name;
-    DiskFile::SplitFilename(extrafile->FileName(), path, name);
+    string name = extrafile->FileName();
 
     if (noiselevel > CommandLine::nlSilent)
       cout << "Opening: " << name << endl;
--- a/par2creatorsourcefile.cpp
+++ b/par2creatorsourcefile.cpp
@@ -60,16 +60,7 @@ bool Par2CreatorSourceFile::Open(CommandLine::NoiseLevel noiselevel, const Comma
   blockcount = (u32)((filesize + blocksize-1) / blocksize);
   
   // Determine what filename to record in the PAR2 files
-  string::size_type where;
-  if (string::npos != (where = diskfilename.find_last_of('\\')) ||
-      string::npos != (where = diskfilename.find_last_of('/')))
-  {
-    parfilename = diskfilename.substr(where+1);
-  }
-  else
-  {
-    parfilename = diskfilename;
-  }
+  parfilename = diskfilename;
 
   // Create the Description and Verification packets
   descriptionpacket = new DescriptionPacket;
--- a/par2repairersourcefile.cpp
+++ b/par2repairersourcefile.cpp
@@ -66,19 +66,7 @@ void Par2RepairerSourceFile::ComputeTargetFileName(string path)
   // Get a version of the filename compatible with the OS
   string filename = DiskFile::TranslateFilename(descriptionpacket->FileName());
 
-  // Strip the path from the filename
-  string::size_type where;
-  if (string::npos != (where = filename.find_last_of('\\'))
-      || string::npos != (where = filename.find_last_of('/'))
-#ifdef WIN32
-      || string::npos != (where = filename.find_last_of(':'))
-#endif
-     )
-  {
-    filename = filename.substr(where+1);
-  }
-
-  targetfilename = path + filename;
+  targetfilename = filename;
 }
 
 string Par2RepairerSourceFile::TargetFileName(void) const
