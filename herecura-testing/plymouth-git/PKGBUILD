# Maintainer: Det <nimetonmaili at gmail dot com>
# Contributor: Christian Autermann <christian@autermann.org>
# Contributor: Martin Lee <hellnest.fuah@gmail.com>
# Contributor: Ricardo Funke
# Contributor: PirateJonno <j@skurvy.no-ip.org>
# Contributor: lh <jarryson#gmail.com>
# Contributor: Cilyan Olowen <gaknar@gmail.com>

pkgname=plymouth-git
pkgver=20110924
pkgrel=1
pkgdesc="A graphical boot splash screen with kernel mode-setting support (Git version)"
arch=('i686' 'x86_64')
url="http://freedesktop.org/wiki/Software/Plymouth"
license=('GPL')
depends=('initscripts' 'libdrm' 'gtk2')
makedepends=('git')
options=('!libtool' '!emptydirs')
install=${pkgname}.install
backup=('etc/plymouth/plymouthd.conf')
provides=('plymouth')
conflicts=('plymouth')
source=(
	'arch-logo.png'
	"http://projects.archlinux.org/svntogit/packages.git/plain/cryptsetup/repos/core-${CARCH}/encrypt_hook"
	"http://projects.archlinux.org/svntogit/packages.git/plain/cryptsetup/repos/core-${CARCH}/encrypt_install"
	'encrypt_hook.patch'
	'encrypt_install.patch'
	'plymouthd.conf'
	'plymouth.functions'
	'plymouth.initcpio_hook'
	'plymouth.initcpio_install'
	'plymouth-update-initrd.patch'
	'system-release'
)
sha1sums=(
	'3bc168dd06ff3e2790f26c131209a7fb4a5ccbd7'  # arch-logo.png
	'2d3dfa82eabe51f1addf7472f65a7588324e1c0a'  # encrypt_hook
	'2ddf6061162b481f343ce883083b6ab3b64342e0'  # encrypt_install
	'70e210bceb266b974fc6f313f0a460d21c29af7b'  # encrypt_hook.patch
	'08dc7cdc5873634042052014b5250d552158dc4e'  # encrypt_install.patch
	'01235a179d8f991a37035c15cdcc0733b581afd4'  # plymouthd.conf
	'60a55ff2cf417bafa07cf82abcf7680e5c046e52'  # plymouth.functions
	'39a27b5a049dc620b7820b62f351b6cb1d2a48c5'  # plymouth.initcpio_hook
	'c74e5d25c2eadd28da4b93d86a146cea8bbe3cff'  # plymouth.initcpio_install
	'019663ae0070163e8d6cf268e7efeaaef474e725'  # plymouth-update-initrd.patch
	'4c31cbbfbdeb48593641ff600c8d4fb7bda2b01c'  # system-release
)

if [ -e .githash_${CARCH} ] ; then
	_gitphash=$(cat .githash_${CARCH})
else
	_gitphash=""
fi

_gitroot='git://git.freedesktop.org/git/plymouth'
_gitname='plymouth'

build() {
	if [ -d ${srcdir}/${_gitname}/.git ] ; then
		( cd ${srcdir}/${_gitname} && git pull origin )
		msg "The local files are updated."
	else
		( git clone --depth 1 ${_gitroot} ${_gitname} )
	fi
	msg "GIT checkout done or server timeout"

	cd ${_gitname}
	if [ "${_gitphash}" == $(git show | grep -m 1 commit | sed 's/commit //') ]; then
		msg "Git hash is the same as previous build"
		return 1
	fi

	msg "creating build directory"
	cd ${srcdir}
	[ -d ${_gitname}-build ] && rm -rf ${_gitname}-build
	cp -a ${_gitname} ${_gitname}-build

	msg "Applying Patches..."
	patch -p0 -i encrypt_hook.patch
	patch -p0 -i encrypt_install.patch

	cd ${_gitname}-build
	patch -p0 -i "${srcdir}/plymouth-update-initrd.patch"

	sed -e 's:png_set_gray_1_2_4_to_8:png_set_expand_gray_1_2_4_to_8:g' \
		-i src/libply-splash-graphics/ply-image.c

	msg "Starting make..."

	./autogen.sh --prefix=/usr --sysconfdir=/etc --localstatedir=/var --libexecdir=/usr/lib \
		--enable-tracing \
		--with-system-root-install \
		--enable-gdm-transition \
		--with-gdm-autostart-file=no \
		--with-logo=/usr/share/plymouth/arch-logo.png \
		--with-background-start-color-stop=0x000000 \
		--with-background-end-color-stop=0x4D4D4D

	make
}

package() {
	cd ${_gitname}-build

	make DESTDIR="${pkgdir}" install

	install -Dm644 "${srcdir}/plymouth.initcpio_install" "${pkgdir}/lib/initcpio/install/plymouth"
	install -Dm644 "${srcdir}/plymouth.initcpio_hook" "${pkgdir}/lib/initcpio/hooks/plymouth"
	install -Dm644 "${srcdir}/encrypt_install" "${pkgdir}/lib/initcpio/install/plymouth-encrypt"
	install -Dm644 "${srcdir}/encrypt_hook" "${pkgdir}/lib/initcpio/hooks/plymouth-encrypt"
	install -Dm644 "${srcdir}/plymouth.functions" "${pkgdir}/etc/rc.d/functions.d/plymouth.functions"
	install -Dm644 "${srcdir}/arch-logo.png" "${pkgdir}/usr/share/plymouth/arch-logo.png"
	install -Dm644 "${srcdir}/system-release" "${pkgdir}/etc/system-release"
	install -Dm644 "${srcdir}/plymouthd.conf" "${pkgdir}/etc/plymouth/plymouthd.conf"
	git show | grep -m 1 commit | sed 's/commit //' > ${startdir}/.githash_${CARCH}
}
